- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#page-yield
  .hor_line
  %h2
    = t('employee_payslip')
    \-#{@salary_date.strftime("%B %Y")}
  .hor_line
  .extender
  .report
    #main_info
      .info_left
        .info
          .info-label= t('name')
          .info-data
            %span :
            = @employee.full_name.upcase
        .info
          .info-label= t('employee_number')
          .info-data
            %span :
            = @employee.employee_number
        .info
          .info-label= t('grade')
          .info-data
            %span :
            = EmployeeGrade.find(@employee.employee_grade_id).name unless @employee.employee_grade_id.nil?
        .info
          .info-label= t('category')
          .info-data
            %span :
            = EmployeeCategory.find(@employee.employee_category_id).name
        .info
          .info-label= t('department')
          .info-data
            %span :
            = @employee.employee_department.name
        .info
          .info-label= t('joining_date')
          .info-data
            %span :
            = I18n.l(@employee.joining_date,:format=>:normal)
      .info_right
        - @bank_details.each do |b|
          .info
            .info-label= b.bank_field.name
            .info-data
              %span :
              = b.bank_info
    #pdf-info
      - @monthly_payslips = MonthlyPayslip.where('salary_date = ? and employee_id = ?', @salary_date, @employee.id).order("payroll_category_id ASC")
      - @individual_payslip_category = IndividualPayslipCategory.where('salary_date = ? and employee_id = ?', @salary_date, @employee.id).order("id ASC")
      - @individual_category_non_deductionable = 0
      - @individual_category_deductionable = 0
      - @individual_payslip_category.each do |pc|
        - unless pc.is_deduction == true
          - @individual_category_non_deductionable = @individual_category_non_deductionable + pc.amount.to_i
      - @individual_payslip_category.each do |pc|
        - unless pc.is_deduction == false
          - @individual_category_deductionable = @individual_category_deductionable + pc.amount.to_i
      - @non_deductionable_amount = 0
      - @deductionable_amount = 0
      - @monthly_payslips.each do |mp|
        - category1 = PayrollCategory.find(mp.payroll_category_id)
        - unless category1.is_deduction == true
          - @non_deductionable_amount = @non_deductionable_amount + mp.amount.to_i
      - @monthly_payslips.each do |mp|
        - category2 = PayrollCategory.find(mp.payroll_category_id)
        - unless category2.is_deduction == false
          - @deductionable_amount = @deductionable_amount + mp.amount.to_i
      - @net_non_deductionable_amount = @individual_category_non_deductionable + @non_deductionable_amount
      - @net_deductionable_amount = @individual_category_deductionable + @deductionable_amount
      - @net_amount = @net_non_deductionable_amount - @net_deductionable_amount
      %table#pdf-table{:cellspacing => "0", :width => "100%"}
        %tr.table-header
          %td.col-pdf{:colspan => "2"}= t('earnings')
        - c = 'even'
        - @monthly_payslips.each do |mp|
          - category = PayrollCategory.find(mp.payroll_category_id)
          - if category.is_deduction == false
            - c =cycle('even','odd ')
            %tr{:class => "#{c}"}
              %td.col-pdf= category.name
              %td.col-pdf= "#{@currency_type.to_s}" + " " "#{mp.amount.to_s}"
        - unless @individual_payslip_category.empty?
          - @individual_payslip_category.each do |pc|
            - if pc.is_deduction == false
              - c = cycle('even','odd ')
              %tr{:class => "#{c}"}
                %td.col-pdf= pc.name
                %td.col-pdf= "#{@currency_type.to_s}" + " " "#{pc.amount.to_s}"
        - if c =='even'
          %tr.odd
            %td.col-pdf
              %b= t('total_salary')
            %td.col-pdf
              %b= "#{@currency_type.to_s}"+ " " "#{@net_non_deductionable_amount.to_s}"
        - else
          %tr.even
            %td.col-pdf
              %b= t('total_salary')
            %td.col-pdf
              %b= "#{@currency_type.to_s}"+ " " "#{@net_non_deductionable_amount.to_s}"
        %tr.table-header
          %td.col-pdf{:colspan => "2"}= t('deductions')
        - @monthly_payslips.each do |mp|
          - category = PayrollCategory.find(mp.payroll_category_id)
          - if category.is_deduction == true
            - c =cycle('even','odd ')
            %tr{:class => "#{c}"}
              %td.col-pdf= category.name
              %td.col-pdf= "#{@currency_type.to_s}" + " " "#{mp.amount.to_s}"
        - unless @individual_payslip_category.empty?
          - @individual_payslip_category.each do |pc|
            - if pc.is_deduction == true
              - c =cycle('even','odd ')
              %tr{:class => "#{c}"}
                %td.col-pdf= pc.name
                %td.col-pdf= "#{@currency_type.to_s}" + " " "#{pc.amount.to_s}"
        - if c =='even'
          %tr.odd
            %td.col-pdf
              %b= t('deductions')
            %td.col-pdf
              %b= "#{@currency_type.to_s}"+" ""#{@net_deductionable_amount.to_s}"
          %tr.table-header
            %td.col-pdf{:colspan => "2"}= t('total')
          %tr.even
            %td.col-pdf
              %b= t('net_salary')
            %td.col-pdf
              %b= "#{@currency_type.to_s}"+ " " "#{@net_amount.to_s}"
          - unless @monthly_payslips.first.is_approved == false and @monthly_payslips.first.is_rejected == false
            %tr.odd
              %td.col-pdf
                %b= t('remark')
              %td.col-pdf
                %b= @monthly_payslips.first.remark
        - else
          %tr.even
            %td.col-pdf
              %b= t('deductions')
            %td.col-pdf
              %b= "#{@currency_type.to_s}"+ " ""#{@net_deductionable_amount.to_s}"
          %tr.table-header
            %td.col-pdf{:colspan => "2"}= t('total')
          %tr.odd
            %td.col-pdf
              %b= t('net_salary')
            %td.col-pdf
              %b= "#{@currency_type.to_s}"+ " " "#{@net_amount.to_s}"
          - unless @monthly_payslips.first.is_approved == false and @monthly_payslips.first.is_rejected == false
            %tr.even
              %td.col-pdf
                %b= t('remark')
              %td.col-pdf
                %b= @monthly_payslips.first.remark
