- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
- unless flash[:warn_notice].nil?
  #errorExplanation.errorExplanation
    = flash[:warn_notice]
%ul#department-list
  - unless @assigned_employee.empty?
    %li.heading
      = t('currently_assigned')
      \:
    - @assigned_employee.each do |e|
      - @employee = Employee.find(e.employee_id)
      %li{:class => "list#{cycle('even', 'odd')}"}
        .department-name
          = @employee.first_name
          = @employee.last_name
          = "(#{EmployeeDepartment.find(@employee.employee_department_id).name})"
        .remove= link_to "#{t('delete_text')}", {:action => "remove_employee", :id => e.employee_id, :id1=>e.subject_id}, method: :DELETE, :update => "department-select", :remote => true
  - else
    %p.flash-msg= t('no_employee_assigned')
  .label-field-pair
    %label{:for => "department_name"}= t('department')
    .text-input-bg
      = select :subject_assignment, :department_id, @departments.map { |s| [s.name, s.id] },{:prompt => "#{t('select_a_department')}"},
      {onChange: "onChangeRequest(this, '#{url_for(action: :update_employees, department_id: 'paramid', subject_id: @subject.id)}')"}
#employee-list
.extender
