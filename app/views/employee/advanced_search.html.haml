- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#content-header
  = image_tag("HR/show_hr.png")
  %h1= t('employee_text')
  %h3= t('advanced_search_text')
  #app-back-button
    = back_button
#page-yield
  #search-form
    = form_for @search do |f|
      .label-field-pair
        %label{:for => "name"}= t('name')
        .text-input-bg
          = f.text_field :first_name_or_middle_name_or_last_name_like
      .label-field-pair
        %label{:for => "student_admission_no"}= t('employee_number')
        .text-input-bg
          = f.text_field :employee_number_equals
      .label_field_pair
        %label.label_for_student= t('gender')
        .student_gender_value
          %label.label_for_gender= t('all')
          = f.radio_button  :gender_equals, ""
          %label.label_for_gender= t('male')
          = f.radio_button  :gender_equals, "m"
          %label.label_for_gender= t('female')
          = f.radio_button  :gender_equals, "f"
      .label-field-pair
        %label{:for => "student_admission_no"}= t('blood_group')
        .text-input-bg
          = select :search, :blood_group_like, ["A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-"],{:prompt=>"#{t('select')}"}
      .label-field-pair
        %label{:for => "student_admission_no"}= t('marital_status')
        .text-input-bg
          = select :search, :marital_status_like, [["#{t('single')}","single"], ["#{t('married')}","married"],["#{t('divorced')}","divorced"]],{:prompt=>"#{t('select')}"}
      .label-field-pair
        %label{:for => "student_admission_no"}= t('country')
        .text-input-bg
          = f.collection_select :nationality_id_equals, Country.all,:id,:name,{:prompt=>"#{t('select')}"}
      .label-field-pair
        %label{:for => "student_admission_no"}= t('category')
        .text-input-bg
          = f.collection_select :employee_category_id_equals, EmployeeCategory.all, :id, :name, {:prompt=>"#{t('select')}"}
      .label-field-pair
        %label{:for => "student_admission_no"}= t('department')
        .text-input-bg
          = f.collection_select :employee_department_id_equals, EmployeeDepartment.all, :id, :name, {:prompt=>"#{t('select')}"}
      .label-field-pair
        %label{:for => "student_admission_no"}= t('position')
        .text-input-bg
          = f.collection_select :employee_position_id_equals, EmployeePosition.all, :id, :name, {:prompt=>"#{t('select')}"}
      .label-field-pair
        %label{:for => "student_admission_no"}= t('grade')
        .text-input-bg
          = f.collection_select :employee_grade_id_equals, EmployeeGrade.all, :id, :name,{:prompt=>"#{t('select')}"}
      .label-field-pair
        %label{:for => "student_admission_no"}
          = t('joining_date')
          = image_tag("loader.gif",     |
            :align => "absmiddle",      |
            :border => 0,               |
            :id => "loader",            |
            :style =>"display: none;" ) |
        .text-input-bg
          = select :adv_search,:doj_option,[["#{t('equal_to')}","equal_to"],["#{t('less_than')}","less_than"],["#{t('greater_than')}","greater_than"]],{:prompt=>"#{t('choose_your_option')}"}, |
            {:onChange => "#{remote_function(:url => {:action => "list_doj_year"},                                                                                                              |
            :with=>"'doj_option='+value",                                                                                                                                                       |
            :before => "Element.show('loader')",                                                                                                                                                |
            :success => "Element.hide('loader')"                                                                                                                                                |
            )}"}                                                                                                                                                                                |
          #doj_year
            = select :adv_search,:doj_year,[],{:prompt=>"#{t('select')}"}
          #doj_year_hidden
      .label-field-pair
        %label{:for => "student_admission_no"}
          = t('date_of_birth')
          = image_tag("loader.gif",     |
            :align => "absmiddle",      |
            :border => 0,               |
            :id => "loader",            |
            :style =>"display: none;" ) |
        .text-input-bg
          = select :adv_search,:dob_option,[["#{t('equal_to')}","equal_to"],["#{t('less_than')}","less_than"],["#{t('greater_than')}","greater_than"]],{:prompt=>"#{t('choose_your_option')}"}, |
            {:onChange => "#{remote_function(:url => {:action => "list_dob_year"},                                                                                                              |
            :with=>"'dob_option='+value",                                                                                                                                                       |
            :before => "Element.show('loader')",                                                                                                                                                |
            :success => "Element.hide('loader')"                                                                                                                                                |
            )}"}                                                                                                                                                                                |
          #dob_year
            = select :adv_search,:dob_year,[],{:prompt=>"#{t('select')}"}
          #dob_year_hidden
      .label_field_pair
        %label.label_for_student{:for => "student_gender"}= t('status')
        .student_gender_value
          %label.label_for_gender{:for => "student_gender_true"}= t('present')
          = f.radio_button  :status_equals, "true", {:checked => false }
          %label.label_for_gender{:for => "student_gender_false"}= t('former')
          = f.radio_button  :status_equals, "false"
          %label.label_for_gender{:for => "student_gender_false"} All
          = f.radio_button  :status_equals, "", {:checked => 'checked'}
      = f.submit  "#{t('search_text')}", :class=>'submit'
  - unless @employees1.nil?
    - if @sort_order=="first_name-ascend"
      - @employees1= @employees1.to_a.sort_by{|s| s.first_name}
    - elsif @sort_order=="first_name-descend"
      - @employees1= @employees1.to_a.sort_by{|s| s.first_name}.reverse
    :javascript
      Event.observe(window, 'load', function() { $('search-form').hide(); });
    #search-result
      %p
        = t('searched_for')
        \:
      .search-again
        - searched_for = "#{t('listed_by')}"
        - searched_for += "#{t('name')}: " + params[:search][:first_name_or_middle_name_or_last_name_like].to_s unless params[:search][:first_name_or_middle_name_or_last_name_like].empty?
        - searched_for += "#{t('employee_number')}: " + params[:search][:employee_number_equals].to_s unless params[:search][:employee_number_equals].empty?
        - searched_for += " #{t('employee_department')}: " + EmployeeDepartment.find(params[:search][:employee_department_id_equals]).name.to_s unless params[:search][:employee_department_id_equals].empty?
        - searched_for += " #{t('employee_category')}: " + EmployeeCategory.find(params[:search][:employee_category_id_equals]).name.to_s unless params[:search][:employee_category_id_equals].empty?
        - searched_for += " #{t('employee_position')}: " + EmployeePosition.find(params[:search][:employee_position_id_equals]).name.to_s unless params[:search][:employee_position_id_equals].empty?
        - searched_for += " #{t('employee_grade')}: " + EmployeeGrade.find(params[:search][:employee_grade_id_equals]).name.to_s unless params[:search][:employee_grade_id_equals].empty?
        - unless  params[:search][:gender_equals].empty?
          - if  params[:search][:gender_equals] == 'm'
            - searched_for += " #{t('gender')}: #{t('male')}"
          - elsif  params[:search][:gender_equals] == 'f'
            - searched_for += " #{t('gender')}: #{t('female')}"
          - else
            - searched_for += " #{t('gender')}: #{t('all')}"
        - searched_for += " #{t('blood_group')}: " + params[:search][:blood_group_like].to_s unless params[:search][:blood_group_like].empty?
        - searched_for += " #{t('marital_status')}: " + params[:search][:marital_status_like].to_s unless params[:search][:marital_status_like].empty?
        - searched_for += " #{t('nationality')}: " + Country.find(params[:search][:nationality_id_equals]).name.to_s unless params[:search][:nationality_id_equals].empty?
        - searched_for += " #{t('year_of_join')}: " +  params[:adv_search][:doj_option].to_s + params[:adv_search][:joining_date_year].to_s unless  params[:adv_search][:doj_option].empty?
        - searched_for += " #{t('year_of_birth')}: " +  params[:adv_search][:dob_option].to_s + params[:adv_search][:birth_date_year].to_s unless  params[:adv_search][:dob_option].empty?
        - if params[:search][:status_equals]=="true"
          - searched_for += " #{t('present_employee')}"
        - elsif params[:search][:status_equals]=="false"
          - searched_for += " #{t('former_employee')}"
        - else
          - searched_for += " #{t('all_employee')}"
        = link_to "► #{t('search_again')}", {:action=>"advanced_search"}, :class => "user_button"
        - unless @employees1.empty?
          = link_to "► #{t('pdf_report')}",   {:action => "advanced_search_pdf",:for =>searched_for, :result2=>@employees2 , :result =>@employees1,:status=>params[:search][:status_equals], :format => 'pdf', :page_height=>1200}, :target => '_blank', :class => "user_button"
      .extender
      .searched_for.themed_text
        - unless params[:search][:first_name_or_middle_name_or_last_name_like].empty?
          - searched_for = params[:search][:first_name_or_middle_name_or_last_name_like]
          %span
            = t('name')
            \:
          = params[:search][:first_name_or_middle_name_or_last_name_like]
        - unless  params[:search][:employee_number_equals].empty?
          %span
            = t('employee_number')
            \:
          = params[:search][:employee_number_equals]
        - unless params[:search][:employee_department_id_equals].empty?
          - dept = EmployeeDepartment.find(params[:search][:employee_department_id_equals])
          %span
            = t('employee_department')
            \:
          = dept.name
        - unless  params[:search][:employee_category_id_equals].empty?
          - category = EmployeeCategory.find(params[:search][:employee_category_id_equals])
          %span
            = t('employee_category')
            \:
          = category.name
        - unless  params[:search][:employee_position_id_equals].empty?
          - position = EmployeePosition.find(params[:search][:employee_position_id_equals])
          %span
            = t('employee_position')
            \:
          = position.name
        - unless  params[:search][:employee_grade_id_equals].empty?
          - grade = EmployeeGrade.find(params[:search][:employee_grade_id_equals])
          %span
            = t('employee_grade')
            \:
          = grade.name
        - unless  params[:search][:gender_equals].empty?
          - if  params[:search][:gender_equals] == 'm'
            %span
              = t('gender')
              \:
            = t('male')
          - elsif  params[:search][:gender_equals] == 'f'
            %span
              = t('gender')
              \:
            = t('female')
          - else
            %span
              = t('gender')
              \:
            = t('all')
        - unless  params[:search][:blood_group_like].empty?
          %span
            = t('blood_group')
            \:
          = params[:search][:blood_group_like]
        - unless  params[:search][:marital_status_like].empty?
          %span
            = t('marital_status')
            \:
          = params[:search][:marital_status_like]
        - unless  params[:search][:nationality_id_equals].empty?
          - nationality = Country.find(params[:search][:nationality_id_equals])
          %span
            = t('nationality')
            \:
          = nationality.name
        - unless  params[:adv_search][:doj_option].empty?
          %span
            = t('year_of_join')
            \:
          = params[:adv_search][:doj_option]
          = params[:adv_search][:joining_date_year]
        - unless  params[:adv_search][:dob_option].empty?
          %span
            = t('year_of_birth')
            \:
          = params[:adv_search][:dob_option]
          = params[:adv_search][:birth_date_year]
        - if params[:search][:status_equals]=="true"
          %span
            = t('present_employee')
        - elsif params[:search][:status_equals]=="false"
          %span
            = t('former_employee')
        - else
          %span= t('all')
      %table#listing{:align => "center", :cellpadding => "1", :cellspacing => "1", :width => "100%"}
        - unless @employees1.empty? and @employees2.empty?
          %tr.tr-head
            %td
              = t('sl_no')
            %td
              - if @sort_order=="first_name-ascend"
                = link_to  "#{t('first_name')}&nbsp;▲", {:action=>"advanced_search", :search=>params[:search], :adv_search=>params[:adv_search],:sort_order=>"first_name-descend"}
              - elsif @sort_order=="first_name-descend"
                = link_to  "#{t('first_name')}&nbsp;▼", {:action=>"advanced_search", :search=>params[:search], :adv_search=>params[:adv_search],:sort_order=>"first_name-ascend"}
              - else
                = link_to  "#{t('first_name')}", {:action=>"advanced_search", :search=>params[:search], :adv_search=>params[:adv_search],:sort_order=>"first_name-ascend"}
            %td
              = t('employee_id')
            %td
              = t('employee_department')
          %tr.tr-blank
          - @employees1.each_with_index do |emp1, i|
            %tr{:class => "tr-#{cycle('odd', 'even')}"}
              %td.col-1= i+1
              - if params[:search][:status_equals]=="false"
                %td.col-4= link_to emp1.first_name + ' ' + emp1.last_name, :controller => 'archived_employee', :action => 'profile', :id => emp1.id
              - else
                %td.col-4= link_to emp1.first_name + ' ' + emp1.last_name, :controller => 'employee', :action => 'profile', :id => emp1.id
              %td.col-3= emp1.employee_number
              %td.col-4= emp1.employee_department.name
              - unless @employees2.nil?
                - k = @employees1.size
                - @employees2.each do |emp2|
                  %tr{:class => "tr-#{cycle('odd', 'even')}"}
                    %td.col-1= k+= 1
                    %td.col-4= link_to emp2.first_name + ' ' + emp2.last_name, :controller => 'archived_employee', :action => 'profile', :id => emp2.id
                    %td.col-3= emp2.employee_number
                    %td.col-4= emp2.employee_department.name
              - else
                %tr{:class => "tr-#{cycle('odd', 'even')}"}
                %td.col-2= t('no_employee_found')
      .extender
