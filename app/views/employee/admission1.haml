- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#content-header
  = image_tag("HR/show_hr.png")
  %h1= t('employee_admission')
  %h3= t('step_1')
  #app-back-button
    = back_button
#page-yield
  - unless flash[:notice].nil?
    %p.flash-msg
      = flash[:notice]
  - unless @last_admitted_employee.nil?
    %p.flash-msg= "#{t('last_employee_number')} #{@last_admitted_employee.employee_number}"
  = form_for(:employee, :url => {:action=> 'admission1'}, |
    :html=> {:multipart=>true}) do |a|                               |
    = error_messages_for  :employee
    #admission1_form
      #necessary-field-notification
        = t('legend1')
        %span.necessary-field *
        = t('legend2')
      %span.span-sub-heading= t('general_details')
      %hr.sub-heading/
      .label-field-pair
        %label{:for => "employee_id"}
          = t('employee_number')
          %span.necessary-field *
        .text-input-bg
          - unless @config.config_value == '0' or @last_admitted_employee.nil?
            = a.text_field :employee_number, :value=> @last_admitted_employee.employee_number.next
          - else
            = a.text_field :employee_number,:value=>'E1'
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_joining_date"}= t('joining_date')
        .text-input-bg= date_select 'employee[joining_date]', I18n.l(Date.today,:format=>:default),:max_year_allowed => 100 
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_name"}
          = t('first_name')
          %span.necessary-field *
        .text-input-bg= a.text_field :first_name
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_name"}= t('middle_name')
        .text-input-bg= a.text_field :middle_name
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_name"}= t('last_name')
        .text-input-bg= a.text_field :last_name
      %hr.label-underline/
      .label-field-pair
        %label= t('email')
        .text-input-bg= a.text_field :email
        .extender
      %hr.label-underline/
      .label_field_pair
        %label.label_for_employee_gender{:for => "master_student_gender"}= t('gender')
        .employee_gender_value
          %label.label_for_gender{:for => "master_student_gender_true"}= t('male')
          = a.radio_button  "gender", "m", :checked => "checked"
          %label.label_for_gender{:for => "master_student_gender_false"}= t('female')
          = a.radio_button  "gender", "f"
      %hr.label-underline/
      .label-field-pair
        %label{:for => "dob"}
          = t('date_of_birth')
          %span.necessary-field *
        .text-input-bg= date_select 'employee[date_of_birth]', I18n.l(Date.today-10.years,:format=>:default), |
            :start_year => Date.today.year - 50, :popup=>"force"                                          |
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_department"}
          = t('department')
          %span.necessary-field *
        .text-input-bg= select :employee, :employee_department_id, @departments.map {|s| [s.name, s.id]},:prompt => "#{t('select')}"
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_category"}
          = t('category')
          %span.necessary-field *
        .text-input-bg= select :employee, :employee_category_id, @categories.map { |s| [s.name, s.id] },                              |
            {:prompt => "#{t('select')}"},                                                                                |
            {onChange: "onChangeRequest(this,  '#{url_for(action: :update_positions, category_id: 'value')}')"} |
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_position"}
          = t('position')
          %span.necessary-field *
        .text-input-bg
          #positions1
            = render :partial => 'positions', :object => @positions
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_grade"}= t('grade')
        .text-input-bg= select :employee, :employee_grade_id, @grades.map {|s| [s.name, s.id]},:prompt => "#{t('select')}"
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_job_title"}= t('job_title')
        .text-input-bg= a.text_field :job_title
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_qualification"}= t('qualification')
        .text-input-bg= a.text_field :qualification
      %hr.label-underline/
      .label-field-pair-text-area
        %label{:for => "employee_experience"}= t('exp_info')
        .textarea-input-bg= a.text_area :experience_detail,:cols => 27, :rows => 5,:class => 'admission1-textarea'
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_total-experience"}= t('total_exp')
        .text-input-bg
          = select :employee, :experience_year, (0..20),{:prompt=>"#{t('year')}"}
          = select :employee, :experience_month, (0..11),{:prompt=>"#{t('month')}"}
      %hr.label-underline/
      %br/
      %span.span-sub-heading= t('personal_details')
      %hr.sub-heading/
      .label-field-pair
        %label{:for => "employee_martial_status"}= t('marital_status')
        .text-input-bg= select :employee, :marital_status, [["#{t('single')}","single"], ["#{t('married')}","married"],["#{t('divorced')}","divorced"]], {}, {:onchange=>"hide_or_show_fields(this.value)"}
      %hr.label-underline/
      .label-field-pair.hide-on-single
        %label{:for => "children_count"}= t('no_of_children')
        .text-input-bg= a.text_field :children_count
      %hr.label-underline.hide-on-single/
      .label-field-pair
        %label{:for => "employee_father"}= t('father_name')
        .text-input-bg= a.text_field :father_name
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_mother"}= t('mother_name')
        .text-input-bg= a.text_field :mother_name
      %hr.label-underline/
      .label-field-pair.hide-on-single
        %label{:for => "employee_spouse"}= t('spouse_name')
        .text-input-bg= a.text_field :husband_name
      %hr.label-underline.hide-on-single/
      .label-field-pair
        %label{:for => "employee_blood"}= t('blood_group')
        .text-input-bg= select :employee, :blood_group, ["#{t('unknown')}","A+", "A-", "B+", "B-", "O+", "O-", "AB+", "AB-"]
      %hr.label-underline/
      .label-field-pair
        %label{:for => "employee_nationality"}= t('nationality')
        .text-input-bg= select :employee, :nationality_id, @nationalities.map {|c| [c.name, c.id]}, :selected => @employee.nationality_id || @selected_value
      %hr.label-underline/
      :javascript
        (function($){$.fn.filestyle=function(options){var settings={width:250};if(options){$.extend(settings,options);};return this.each(function(){var self=this;var wrapper=$("<div>").css({"width":settings.imagewidth+"px","height":settings.imageheight+"px","background":"url("+settings.image+") 0 0 no-repeat","background-position":"right","display":"inline","position":"absolute","overflow":"hidden"});var filename=$('<input class="file">').addClass($(self).attr("class")).css({"display":"inline","width":settings.width+"px"});$(self).before(filename);$(self).wrap(wrapper);$(self).css({"position":"relative","height":settings.imageheight+"px","width":settings.width+"px","display":"inline","cursor":"pointer","opacity":"0.0"});if($.browser.mozilla){if(/Win/.test(navigator.platform)){$(self).css("margin-left","-142px");}else{$(self).css("margin-left","-168px");};}else{$(self).css("margin-left",settings.imagewidth-settings.width+"px");};$(self).bind("change",function(){filename.val($(self).val());});});};})(jQuery);
      .label-field-pair
        %label{:for => "master_student_image_file"}
          = t('upload_photo')
          (#{t('max_size')})
        .text-input-bg= a.file_field :photo, :size=>12
    = submit_tag "â–º #{t('save_and_proceed')}", :class => "submit_button"
- content_for :head do
  :javascript
    document.observe("dom:loaded", function() {
      hide_or_show_fields('single');
    });
    function hide_or_show_fields(value){
      if(value == 'single'){
        $('.hide-on-single').each(function (elem){
          elem.hide();
        });
      }
      else{
        $('.hide-on-single').each(function (elem){
          elem.show();
        });
      }
    }
