- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#content-header
  = image_tag("HR/show_hr.png")
  %h1= t('employee_admission')
  %h3= t('step_4')
  #app-back-button
    = back_button
#page-yield
  - unless flash[:notice].nil?
    %p.flash-msg
      = flash[:notice]
  = form_for(:employee_additional_details, :url => {:id => @employee.id}) do |a|
    = error_messages_for 'employee'
    - i=0
    = hidden_field_tag :edit_request, params[:edit_request]
    #form-contents
      %span.span-sub-heading= t('additional_detail')
      %hr.sub-heading/
      #necessary-field-notification
        = t('legend1')
        %span.necessary-field *
        = t('legend2')
      - @additional_fields.each do |additional|
        - prev_record = @employee_additional_details.find_by_additional_field_id(additional.id)
        - unless prev_record.nil?
          - if additional.input_type=="has_many"
            - prev_value = prev_record.additional_info.split(", ")
          - else
            - prev_value = prev_record.additional_info
        - input_val = ((params[:employee_additional_details].present? and params[:employee_additional_details][additional.id.to_s.to_sym].present? and params[:employee_additional_details][additional.id.to_s.to_sym][:additional_info].present?) ? (params[:employee_additional_details][additional.id.to_s.to_sym][:additional_info]) : (prev_value.present? ? prev_value : nil))
        - if additional.input_type=="belongs_to"
          .label-field-pair
            %label
              = additional.name
              - if additional.is_mandatory
                %span.necessary-field *
            .text-input-bg= select_tag "employee_additional_details[#{additional.id}][additional_info]", options_for_select(additional.additional_field_options.map{|b| [b.field_option,b.field_option]}, input_val)
        - elsif additional.input_type=="has_many"
          .grades
            .label-field-pair
              %label
                = additional.name
                - if additional.is_mandatory
                  %span.necessary-field *
            .fee_category_scroll
              .sel-list
                = t('select')
                = select_all('each_batch')
                = select_none('each_batch')
              - additional.additional_field_options.each do |k|
                .each_batch
                  = check_box_tag "employee_additional_details[#{additional.id}][additional_info][]", k.field_option,(!(input_val.nil?) and input_val.include?(k.field_option)), :class=>"batches_box check#{i}"
                  %label= k.field_option
          - i+=1
        - else
          .label-field-pair
            %label
              = additional.name
              - if additional.is_mandatory
                %span.necessary-field *
            .text-input-bg= text_field_tag "employee_additional_details[#{additional.id}][additional_info]", input_val
        .extender
        %hr.label-underline/
    .save-proceed-button
      = submit_tag "â–º #{t('save_and_proceed')}"
