- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#content-header
  = image_tag("reminder/reminder_small.png")
  %h1= t('messages')
  %h3= t('inbox')
  #app-back-button
    = back_button
#inner-tab-menu
  %ul
    - unless @new_reminder_count.size == 0
      %li= link_to "<b>#{t('inbox')} (#{@new_reminder_count.size})</b>", reminders_path
    - else
      %li= link_to t('inbox'), reminders_path
    %li= link_to t('sent'), sent_reminders_path
    %li= link_to t('create_text'), create_reminder_reminders_path
#page-yield
  - unless flash[:notice].nil?
    %p.flash-msg
      = flash[:notice]
  #application-list
    = form_for :reminder, url: reminder_actions_reminders_path do |f|
      = hidden_field_tag :page, (params[:page].nil? ? 1 : params[:page])
      %table#listing{:align => "center", :cellpadding => "1", :cellspacing => "1", :width => "100%"}
        %tr.tr-select
          %td.text-input-bg{:colspan => "4"}
            = select :reminder, :action, [[t('delete'), 'delete'],[t('mark_as_unread'),'unread'],[t('mark_as_read'),'read']], {:prompt => t('select_an_action')} , {:onChange => 'if(this.value==\'delete\'){if(confirm(\'Are you sure?\')){this.form.submit()}}else{this.form.submit()}'}
        %tr.tr-head
          %td.col-8= check_box_tag "check_all", nil, false, {:class=>'check_all' }
          %td
            = t('from')
          %td
            = t('subject')
          %td
            = t('date_text')
        %tr.tr-blank
        - @reminders.each do |ur|
          - if ur.is_read
            - sender_user = ur.user
            %tr{:class => "tr-read-#{cycle('odd', 'even')}"}
              %td.col-8
                = check_box_tag "message_ids[]", ur.id, false, {class: :message_check}
              - unless sender_user.nil?
                %td.col-4
                  = link_to sender_user.first_name, view_reminder_path(ur.id)
              - else
                %td.col-4= link_to t('user_unavailable'), view_reminder_path(ur.id)
              %td.col-2= link_to ur.subject,view_reminder_path(ur.id)
              %td.col-1= link_to ur.created_at.strftime("%d-%m-%Y"), view_reminder_path(ur.id)
          - else
            - sender_user = ur.user
            %tr{:class => "tr-#{cycle('odd', 'even')}"}
              %td.col-8= check_box_tag "message_ids[]", ur.id, false, {:class=>'message_check' }
              - unless sender_user.nil?
                %td.col-4
                  = link_to sender_user.first_name, view_reminder_path(ur.id)
              - else
                %td.col-4
                  = link_to t('user_unavailable'), view_reminder_path(ur.id)
              %td.col-2= link_to ur.subject,view_reminder_path(ur.id)
              %td.col-1
                = link_to ur.created_at.strftime("%d-%m-%Y"), view_reminder_path(ur.id)
      :javascript
        $('.message_check').invoke('observe','click',function() {
          if(this.checked == false){
            $('.check_all').first().checked = false
            $(this).up('tr').removeClassName('active')
          }
          else{
            $(this).up('tr').addClassName('active')
          }

        });
        $('.check_all').invoke('observe','click',function() {
          field_value = this.checked
          $('.message_check').each(function(check){
            check.checked = field_value;
            if(check.checked == false){
              $(check).up('tr').removeClassName('active')
            }
            else{
              $(check).up('tr').addClassName('active')
            }
          })
        });
        $('application-list').observe('click', function (e)
        {
          var origin = e.element();
          if (!origin) return;
          if (!origin.nodeName) return;
          if (origin.nodeName.toLowerCase() === 'input') {
            if (e.shiftKey) {
              var checkBoxes = $('.message_check');
              var last = checkBoxes.indexOf(lastSelected);
              var first = checkBoxes.indexOf(origin);
              if (-1 == last) {
                lastSelected = origin;
                return;
              }

              var start = Math.min(first, last);
              var end = Math.max(first, last);

              var chk = lastSelected.checked;
              for (var i = start; i < end; ++i) {
                checkBoxes[i].checked = chk;
                if(chk == false){
                  checkBoxes[i].up('tr').removeClassName('active')
                }
                else{
                  checkBoxes[i].up('tr').addClassName('active')
                }
              }
            } else {
              lastSelected = origin;
            }
          }
        });
    = will_paginate @reminders, :previous_label=>t('previous_text'), :next_label=>t('next_text')
