- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#content-header
  = image_tag("reminder/reminder_small.png")
  %h1= t('reminder_text')
  %h3= t('view')
  #app-back-button
    = back_button
#inner-tab-menu
  %ul
    %li= link_to t('back_to_inbox').html_safe, reminders_path
    %li= link_to t('mark_as_unread') , mark_unread_reminder_path(@new_reminder.id)
    %li= link_to t('delete_text'),  delete_by_recipient_reminder_path(@new_reminder), confirm: t('delete_confirm_msg'), method: :DELETE
#page-yield
  - unless flash[:notice].nil?
    %p.flash-msg
      = flash[:notice]
  #reminder-body
    #reminder-from
      = t('from')
      \: #{@sender.nil? ? t('user_unavailable') : @sender.full_name}
    #reminder-date
      = t('sent_on')
      \: #{I18n.l(@new_reminder.created_at, format: "%A, %d %B, %Y")}
    #reminder-subject.themed_text
      = t('subject')
      \: #{@new_reminder.subject}
    #reminder-message
      %strong
        = t('message')
        \:
      %br/
      %br/
      = h @new_reminder.body
    #reminder-reply
      = link_to "►#{t('reply')}", 'javascript: void(0);', class: 'button user_button', onclick: "toggleEffect('reply-form')" unless @sender.nil?
    #reply-form{:style => "display:none;"}
      = form_for :reminder, :url=>{id: @new_reminder.id}  do |l|
        = error_messages_for :reminder
        .message
          .label-field-pair
            %label{:for => "subject"}= t('subject')
            .text-input-bg= l.text_field :subject
          .label-field-pair
            %label{:for => "start_date"}= t('message')
            .text-area-bg= l.text_area :body, cols: 25, rows: 10
          .extender
          #submit-button
            = submit_tag "► #{t('send')}", class: :button
