- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#page-yield
  .hor_line
  %h2{:align => "center"}= t('transcript_of_academic_record')
  .hor_line
  .extender
  .report
    #main_info
      .info1
        .info-left
          %h4
            = t('name')
            \: #{@student.full_name}
        .info-right
          %h4
            = t('adm_no')
            \: #{@student.admission_no.present? ? @student.admission_no : "-"}
      .hor_line
      .info1
        .info-left
          %h4
            = t('course_text')
            \: #{@student.batch.course.course_name}
        .hor_line
      #pdf-info
        - reports = GroupedExamReport.where("student_id = ? and score_type =? ", @student.id,'c')
        - if reports.blank?
          %p.flash-msg= t('grouped_exam_reports_not_generated')
        - else
          - grades = []
          - grade_type = "normal"
          - grade_type = "GPA" if @student.batch.gpa_enabled?
          - grade_type = "CWA" if @student.batch.cwa_enabled?
          - @batches.each do|batch|
            - st_mark = GroupedExamReport.find_by_batch_id_and_student_id_and_score_type(batch.id,@student.id,"c")
            - unless st_mark.nil?
              - general_subjects = Subject.where("batch_id = ? and elective_group_id IS ? AND is_deleted=?", batch.id, nil, false)
              - student_electives = StudentsSubject.where("student_id = ? and batch_id = ? ", @student.id,batch.id)
              - elective_subjects = []
              - student_electives.each do |elect|
                - elective_subjects.push Subject.find(elect.subject_id)
              - @subjects = general_subjects + elective_subjects
              - @subjects.to_a.reject!{|s| (s.no_exams==true or s.no_exam_for_batch(batch.id))}
              - unless @subjects.blank?
                %h3= batch.full_name
                - total_credits=0
                %table#pdf-table{:cellspacing => "0", :width => "100%"}
                  - c= 'even'
                  %tr.table-header
                    %td= t('subject_code')
                    %td= t('subject_title')
                    - if grade_type=="GPA" or grade_type=="CWA"
                      %td= t('credit')
                      %td= t('marks')
                    - else
                      %td
                        = t('percentage')
                        (%)
                  - @subjects.each do |s|
                    - subject_average = GroupedExamReport.find_by_student_id_and_subject_id_and_score_type(@student.id,s.id,"s")
                    - unless subject_average.nil?
                      %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
                        - if @student.has_retaken_exam(s.id)
                          %td.col-pdf
                            = s.code
                            \-
                            %label.infolbl= t('retaken')
                        - else
                          %td.col-pdf
                            = s.code
                        %td.col-pdf
                          = s.name
                        - if grade_type=="GPA" or grade_type=="CWA"
                          %td.col-pdf= s.credit_hours
                          - total_credits = total_credits + s.credit_hours.to_f
                        %td.col-pdf= subject_average.present? ? subject_average.marks : "-"
                  - if grade_type=="GPA" or grade_type=="CWA"
                    %tr.table-header
                      %td{:align => "right", :colspan => "2"}= t('total')
                      %td= total_credits
                      %td -
                - unless st_mark.nil?
                  - mark = st_mark.marks || 0
                - else
                  - mark=0
                - grades << mark
                - if grade_type=="CWA"
                  %h5
                    = t('combined_weighted_average')
                    \= #{mark==0 ? "-" : mark}
                - elsif grade_type=="GPA"
                  %h5
                    = t('batch_wise_cumulative_grade_point_average')
                    \= #{mark==0 ? "-" : mark}
                - else
                  %h5
                    = t('combined_percentage')
                    \= #{mark==0 ? "-" : mark}
          .class-designations
            - unless grades.count.to_f == 0
              - cgpa = (grades.sum.to_f)/(grades.count.to_f)
            - else
              - cgpa = 0
            - if grade_type=="GPA"
              - designations = ClassDesignation.where("cgpa <= ? AND course_id = ?",cgpa,@student.batch.course_id).order("cgpa DESC")
              %h5{:align => "right"}
                = t('course_wise_cumulative_grade_point')
                \=
                %span.high= "%.2f" %(cgpa)
            - else
              - designations = ClassDesignation.where("marks <= ? AND course_id = ?",cgpa,@student.batch.course_id).order("marks DESC")
              - if grade_type=="CWA"
                %h5{:align => "right"}
                  = t('course_wise_combined_weighted_average')
                  \=
                  %span.high= "%.2f" %(cgpa)
              - else
                %h5{:align => "right"}
                  = t('course_wise_combined_percentage')
                  \=
                  %span.high= "%.2f" %(cgpa)
            %h5{:align => "right"}
              = t('class_designations_text')
              \:
              %span.high= designations.blank? ? "-" : designations.first.name
