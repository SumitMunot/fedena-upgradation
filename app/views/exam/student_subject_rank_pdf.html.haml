- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#page-yield.available_sections1
  .page1
  .section1.row
    %center
      .hor_line
      .extender
  .section1.row
    #main_info
      %h3
        = t('subjects_rankings')
        \- #{@subject.name}
      %h4
        = @batch.name
        \- #{@batch.course.full_name}
  - ranks = []
  - @exam_groups.each do |exam_group|
    - rank_exam = Exam.find_by_subject_id_and_exam_group_id(@subject.id, exam_group.id)
    - unless rank_exam.nil?
      - exam_scores = ExamScore.where(:exam_id => rank_exam.id)
      - ordered_marks = exam_scores.map{|m| m.marks}.compact.uniq.sort.reverse
      - ranks << [exam_group.id,ordered_marks]
  - c = 'even'
  #table-headers.section1.row
    %center
      %table#pdf-table{:width => "100%"}
        %tr.table-header
          %td.serial-td= t('sl_no')
          %td.adm-td= t('adm_no')
          %td.name-td= t('name')
          - @exam_groups.each do |exam_group|
            %td.exam-td= exam_group.name
  - @students.each_with_index do |student,i|
    .section1.row
      %center
        %table#pdf-table{:width => "100%"}
          %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
            %td.serial-td= i+1
            %td.adm-td= student.admission_no.present? ? student.admission_no : "-"
            %td.name-td= student.full_name
            - @exam_groups.each do |exam_group|
              - mark_list = []
              - ranks.each do|rank|
                - if rank[0]==exam_group.id
                  - mark_list = rank[1]
              %td.exam-td
                - exam = Exam.find_by_subject_id_and_exam_group_id(@subject.id, exam_group.id)
                - exam_score = ExamScore.find_by_student_id_and_exam_id(student.id, exam.id) unless exam.nil?
                - unless exam.nil?
                  = exam_score.nil? ? '-' : (exam_score.marks.nil? ? '-' : (mark_list.index(exam_score.marks) + 1))
                - else
                  = "#{t('n_a')}"
- if params[:page_height]
  :javascript
    var body = document.body,
    html = document.documentElement;
    var pg_height = parseInt(#{params[:page_height]}
