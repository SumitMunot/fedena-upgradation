- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
= javascript_include_tag "sortable"
#content-header
  = image_tag("examination/show_exam.png")
  %h1= t('exams_text')
  %h3= t('student_ranking_per_subject')
  #app-back-button
    = back_button
#inner-tab-menu
  %ul
    %li= link_to "#{t('pdf_report')}", {:controller => "exam", :action => "student_subject_rank_pdf", :subject_id=> @subject.id, :page_height=>1150},:target => '_blank'
#page-yield
  - unless flash[:notice].nil?
    %p.flash-msg
      = flash[:notice]
  .box
    %h4
      = @batch.name
      \- #{@batch.course.full_name} | #{@subject.name}
    #score-table
      %table#listing.sortable{:cellpadding => "1", :cellspacing => "1", :onload => "sortables_init()", :width => "100%"}
        %tr.tr-head
          %th.unsortable= t('sl_no')
          %th= t('adm_no')
          %th= t('name')
          - ranks = []
          - @exam_groups.each do |exam_group|
            - rank_exam = Exam.find_by_subject_id_and_exam_group_id(@subject.id, exam_group.id)
            - unless rank_exam.nil?
              - exam_scores = ExamScore.where(:exam_id => rank_exam.id)
              - ordered_marks = exam_scores.map{|m| m.marks}.compact.uniq.sort.reverse
              - ranks << [exam_group.id,ordered_marks]
            %th= exam_group.name
        - @students.each_with_index do |student,i|
          %tr{:class => "tr-#{cycle('odd', 'even')}"}
            %td.col-1= i+1
            %td.col-3= student.admission_no.present? ? student.admission_no : "-"
            %td.col-2= student.full_name
            - @exam_groups.each do |exam_group|
              - mark_list = []
              - ranks.each do|rank|
                - if rank[0]==exam_group.id
                  - mark_list = rank[1]
              %td.col-3
                - exam = Exam.find_by_subject_id_and_exam_group_id(@subject.id, exam_group.id)
                - exam_score = ExamScore.find_by_student_id_and_exam_id(student.id,exam.id) unless exam.nil?
                - unless exam.nil?
                  = exam_score.nil? ? '-' : (exam_score.marks.nil? ? '-' : (mark_list.index(exam_score.marks) + 1))
                - else
                  = "#{t('n_a')}"
    .extender
