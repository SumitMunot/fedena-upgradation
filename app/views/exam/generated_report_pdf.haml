- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#page-yield
  .hor_line
  %h2= "#{t('student_wise_report_for')} "+@exam_group.name+", #{t('batch')}:"+@batch.full_name
  .hor_line
  - @students.each_with_index do |student,i|
    - general_subjects = Subject.where("batch_id = ? and elective_group_id IS ? ", @batch.id , nil)
    - student_electives = StudentsSubject.where("student_id = ? and batch_id = ? ", student.id,@batch.id)
    - elective_subjects = []
    - student_electives.each do |elect|
      - elective_subjects.push Subject.find(elect.subject_id)
    - @subjects = general_subjects + elective_subjects
    - @exams = []
    - @subjects.each do |sub|
      - exam = Exam.find_by_exam_group_id_and_subject_id(@exam_group.id,sub.id)
      - @exams.push exam unless exam.nil?
    .extender
    - if i == 0
      .report
    - else
      .report1
        #main_info
          %h4
            = student.full_name
          %h4
            = "#{t('exam_text')} : "+@exam_group.name
        #pdf-info
          %table#pdf-table{:cellspacing => "0", :width => "100%"}
            - c = 'even'
            - if @batch.cwa_enabled?
              - total_credits=0
              - total_weighted_marks=0
              %tr.table-header
                %td.col-pdf= t('subject_code')
                %td.col-pdf= t('subject_title')
                %td.col-pdf= t('marks')
                %td.col-pdf= t('credit')
                %td.col-pdf= t('grade')
                %td.col-pdf= t('weighted_marks')
              %tr.tr-blank
              - @exams.each_with_index do |exam,i|
                - exam_score = ExamScore.find_by_student_id_and_exam_id(student,exam)
                - unless exam_score.nil?
                  - mark = (exam_score.marks.to_f/exam.maximum_marks.to_f)*100 || "-"
                  - total_credits += exam.subject.credit_hours.to_f || 0
                  - weighted_mark=0
                  - unless mark=="-"
                    - weighted_mark = mark.to_f * exam.subject.credit_hours.to_f
                  - total_weighted_marks += weighted_mark
                - else
                  - mark = "-"
                  - weighted_mark=0
                - if i== 50
                  - i= 0
                  %tr.page-break
                    %td{:colspan => "3"}
                  %tr.table-header
                    %td.col-pdf= t('subject_code')
                    %td.col-pdf= t('subject_title')
                    %td.col-pdf= t('marks')
                    %td.col-pdf= t('credit')
                    %td.col-pdf= t('grade')
                    %td.col-pdf= t('weighted_marks')
                  %tr.tr-blank
                  %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
                    %td.col-pdf= exam.subject.code
                    %td.col-pdf= exam.subject.name
                    %td.col-pdf
                      = mark
                    %td.col-pdf= exam.subject.credit_hours
                    %td.col-pdf= exam_score.present? ? (exam_score.grading_level.present? ? exam_score.grading_level : "-") : "-"
                    %td.col-pdf= weighted_mark
                  %tr.tr-blank
                  %tr.table-header
                    %td.col-pdf{:align => "right", :colspan => "3"} Total
                    %td.col-pdf= total_credits
                    %td -
                    %td.col-pdf= total_weighted_marks
                - elsif @batch.gpa_enabled?
                  - total_credit_points=0
                  - total_credit_hours=0
                  %tr.table-header
                    %td.col-pdf= t('subject_code')
                    %td.col-pdf= t('subject_title')
                    %td.col-pdf= t('credits')
                    %td.col-pdf= t('grade')
                    %td.col-pdf= t('remarks')
                  %tr.tr-blank
                  - @exams.each_with_index do |exam,i|
                    - exam_score = ExamScore.find_by_student_id_and_exam_id(student,exam)
                    - credit_points = 0
                    - unless exam_score.nil? or exam_score.grading_level.nil? or exam_score.grading_level.credit_points.nil?
                      - credit_points = (exam_score.grading_level.credit_points.to_f)*(exam.subject.credit_hours.to_f)|| "-"
                    - total_credit_hours += exam.subject.credit_hours.to_f || 0
                    - total_credit_points += credit_points
                    - if i== 50
                      - i= 0
                      %tr.page-break
                        %td{:colspan => "3"}
                      %tr.table-header
                        %td.col-pdf= t('subject_code')
                        %td.col-pdf= t('subject_title')
                        %td.col-pdf= t('credits')
                        %td.col-pdf= t('grade')
                        %td.col-pdf= t('remarks')
                      %tr.tr-blank
                    %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
                      %td.col-pdf= exam.subject.code
                      %td.col-pdf= exam.subject.name
                      %td.col-pdf= exam.subject.credit_hours
                      %td.col-pdf= exam_score.present? ?  ("#{exam_score.grading_level.present? ? exam_score.grading_level : "-"}"+" ["+"#{exam_score.grading_level.present? ? (exam_score.grading_level.credit_points.present? ? exam_score.grading_level.credit_points : "-") : "-"}"+"]") : "-"
                      %td.col-pdf= exam_score.present? ? (exam_score.grading_level.present? ? (exam_score.grading_level.description.present? ? exam_score.grading_level.description : "-") : "-") : "-"
                  %tr.tr-blank
                  %tr.table-header
                    %td.col-pdf{:align => "right", :colspan => "2"}= t('total')
                    %td.col-pdf= total_credit_hours
                    %td -
                    %td -
                - else
                  - if @exam_group.exam_type == 'Marks'
                    %tr.table-header
                      %td.col-pdf= t('subject')
                      %td.col-pdf= t('marks_obtained')
                      %td.col-pdf= t('max_mark')
                      %td.col-pdf
                        = t('percentage')
                        (%)
                    - total_marks = 0
                    - total_max_marks = 0
                    - @exams.each_with_index do |exam,i|
                      - exam_score = ExamScore.find_by_student_id_and_exam_id(student,exam)
                      - unless exam_score.nil?
                        - mark = exam_score.marks || "-"
                        - total_marks += exam_score.marks || 0
                        - total_max_marks += exam.maximum_marks
                      - else
                        - mark = "-"
                        - @total_percentage = ((total_marks.to_f/total_max_marks.to_f)*100)
                      - if i== 50
                        - i= 0
                        %tr.page-break
                          %td{:colspan => "3"}
                        %tr.table-header
                          %td.col-pdf= t('subject')
                          %td.col-pdf
                            = t('marks_obtained')
                          %td.col-pdf= t('max_mark')
                          %td.col-pdf
                            = t('percentage')
                            (%)
                      %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
                        %td.col-pdf= exam.subject.name
                        %td.col-pdf
                          = mark
                        %td.col-pdf= exam.maximum_marks
                        %td.col-pdf= (exam_score.calculate_percentage unless exam_score.nil?)
                    %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
                      %td.col-pdf= t('total')
                      %td.col-pdf
                        = total_marks
                      %td.col-pdf= total_max_marks
                      %td.col-pdf= @total_percentage
                  - elsif @exam_group.exam_type == 'Grades'
                    %tr.table-header
                      %td.col-pdf= t('subject')
                      %td.col-pdf
                        = t('grade')
                    - @exams.each do |exam|
                      - exam_score = ExamScore.find_by_student_id_and_exam_id(student,exam)
                      - unless exam_score.nil?
                        %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
                          %td.col-pdf= exam.subject.name
                          %td.col-pdf
                            = exam_score.grading_level || "-"
                      - else
                        %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
                          %td.col-pdf= exam.subject.name
                          %td.col-pdf
                            = "-"
                  - else
                    %tr.table-header
                      %td.col-pdf= t('subject')
                      %td.col-pdf
                        = t('grade')
                      %td.col-pdf= t('marks_obtained')
                      %td.col-pdf= t('max_mark')
                      %td.col-pdf
                        = t('percentage')
                        (%)
                    - total_marks = 0
                    - total_max_marks = 0
                    - @exams.each do |exam|
                      - exam_score = ExamScore.find_by_student_id_and_exam_id(student,exam)
                      - unless exam_score.nil?
                        - mark = exam_score.marks || "-"
                        - grade = exam_score.grading_level || "-"
                        - total_marks += exam_score.marks || 0
                        - total_max_marks += exam.maximum_marks
                      - else
                        - mark = "-"
                        - grade = "-"
                        - @total_percentage = ((total_marks.to_f/total_max_marks.to_f)*100)
                      %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
                        %td.col-pdf= exam.subject.name
                        %td.col-pdf
                          = grade
                        %td.col-pdf
                          = mark
                        %td.col-pdf
                          = exam.maximum_marks
                        %td.col-pdf
                          = (exam_score.calculate_percentage unless exam_score.nil?)
                    %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
                      %td.col-pdf= t('total')
                      %td.col-pdf
                        = "-"
                      %td.col-pdf
                        = total_marks
                      %td.col-pdf
                        = total_max_marks
                      %td.col-pdf
                        = (@total_percentage)
            - if @batch.cwa_enabled?
              %h4
                = t('weighted_average')
                \=
                - unless total_credits==0
                  = "%.2f" %(total_weighted_marks.to_f/total_credits.to_f)
                - else
                  \-
            - elsif @batch.gpa_enabled?
              %h4
                = t('grade_point_average_gpa')
                \=
                - unless total_credit_hours==0
                  = "%.2f" %(total_credit_points.to_f/total_credit_hours.to_f)
                - else
                  \-
