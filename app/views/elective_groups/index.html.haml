- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
= stylesheet_link_tag("elective_groups/index.css")
#content-header
  = image_tag("examination/show_exam.png")
  %h1= t('batches_text')
  %h3= "#{t('new_elective')}"
  #app-back-button
    = back_button
#inner-tab-menu
  %ul
    %li= link_to t('new_text'), {:action => :new, :batch_id => @batch.id}
#page-yield
  - unless flash[:notice].nil?
    %p.flash-msg
      = flash[:notice]
  .box
    .bread_crumb
      = link_to t('course_text'), courses_path
      »
      \#{link_to @course.full_name, @course} »
      \#{link_to @batch.name, {:controller => :batches, :action => :show , :course_id => @course.id, :id => @batch.id}} »
      \#{t('elective_group')}
    %ul#category-list
      - @elective_groups.each do |elective|
        %li{:class => "list#{cycle('odd', 'even')}"}
          .category-name= link_to elective.name, {:controller => :elective_groups, :action => :show , :id => elective.id}
          .category-edit
            = link_to t('edit_text'),                                          |
              :controller=>"elective_groups",:action => "edit", :id =>elective.id
          - @subjects= Subject.where("elective_group_id = ? and is_deleted = ? ", elective, false)
          - if @subjects.empty?
            .category-delete
              = link_tot('delete_text'), { :action => :delete , :batch_id => @batch.id, :id => elective}, method: :DELETE
    .extender
