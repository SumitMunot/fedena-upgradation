- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#content-header
  = image_tag("show_finance.png")
  %h1= t('employee_salary_report')
  %h3
    = t('payslip_for')
    = @monthly_payslips.first.active_or_archived_employee.full_name
    on #{@salary_date}
  #app-back-button
    = back_button
#page-yield
  %ul.item-list
    %li.heading
      = t('payslip_generated_for')
      = @monthly_payslips.first.active_or_archived_employee.full_name
  %ul.item-list
    %li.heading
      = t('salary')
      \:
    - @monthly_payslips.each do |mp|
      - unless mp.payroll_category.is_deduction == true
        %li{:class => "list#{cycle('odd', 'even')}"}
          .item-name
            = mp.payroll_category.name
          .item-edit
            %span.currency-type= @currency_type
            = "%.2f" %mp.amount.to_f
    - unless @individual_payslips.empty?
      - @individual_payslips.each do |pc|
        - if  pc.is_deduction == false
          %li{:class => "list#{cycle('odd', 'even')}"}
            .item-name= pc.name
            .item-edit
              %span.currency-type= @currency_type
              = "%.2f" %pc.amount
    %li{:class => "list#{cycle('odd', 'even')}"}
      .item-name
        %b= t('total_salary')
      .item-edit
        %b
          %span.currency-type= @currency_type
          = "%.2f" %@salary[:net_non_deductionable_amount]
  %ul.item-list
    %li.heading
      = t('deductions')
      \:
    - @monthly_payslips.each do |mp|
      - unless mp.payroll_category.is_deduction == false
        %li{:class => "list#{cycle('odd', 'even')}"}
          .item-name= mp.payroll_category.name
          .item-edit
            %span.currency-type= @currency_type
            = "%.2f" %mp.amount.to_f
    - unless @individual_payslips.empty?
      - @individual_payslips.each do |pc|
        - if  pc.is_deduction == true
          %li{:class => "list#{cycle('odd', 'even')}"}
            .item-name= pc.name
            .item-edit
              %span.currency-type= @currency_type
              = "%.2f" % pc.amount
    %li{:class => "list#{cycle('odd', 'even')}"}
      .item-name
        %b= t('total_deductions')
      .item-edit
        %span.currency-type
          %b= @currency_type
        %b= "%.2f" %@salary[:net_deductionable_amount]
  %ul.item-list
    %li.heading
      = t('total')
      \:
    %li.listodd
      .item-name
        %b= t('net_salary')
      .item-edit
        %span.currency-type
          %b= @currency_type
        %b
          = "%.2f" %@salary[:net_amount]
