- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#content-header
  = image_tag("HR/show_hr.png")
  %h1= t('finance_text')
  %h3= t('employee_payslip')
  #app-back-button
    = back_button
#page-yield
  .bread_crumb
    = link_to t('finance_text'), :controller => "finance", :action=>"index"
    »
    \#{link_to "#{t('payslip_text')}", :controller => "finance", :action => "payslip_index"} »
    \#{link_to "#{t('monthly_payslip')}", :controller => "finance", :action => "view_monthly_payslip"} »
    \#{"#{@monthly_payslips.first.active_or_archived_employee.full_name.to_s} :#{params[:salary_date].to_date.strftime("%b %d, %Y")}"}
  %ul.item-list
    %li.heading= @monthly_payslips.first.active_or_archived_employee.full_name
    %li.heading
      = t('payslip_generated_on')
      = params[:salary_date]
      %span.themed_text
        (#{t('status')}: #{@monthly_payslips.first.status_as_text})
  %ul.item-list
    %li.heading1= t('earnings')
    - @monthly_payslips.each do |mp|
      - unless mp.payroll_category.blank?
        - unless mp.payroll_category.is_deduction == true
          %li{:class => "list#{cycle('odd', 'even')}"}
            .item-name
              = mp.payroll_category.name
            .item-edit
              %span.currency-type= @currency_type
              = "%.2f" %mp.amount.to_f
    - unless @individual_payslips.empty?
      - @individual_payslips.each do |pc|
        - if  pc.is_deduction == false
          %li{:class => "list#{cycle('odd', 'even')}"}
            .item-name= pc.name
            .item-edit
              %span.currency-type= @currency_type
              = "%.2f" %pc.amount
    %li{:class => "list#{cycle('odd', 'even')}"}
      .item-name
        %b
          = t('total_salary')
      .item-edit
        %b
          %span.currency-type= @currency_type
          = "%.2f" %@salary[:net_non_deductionable_amount]
  %ul.item-list
    %li.heading1= t('deductions')
    - @monthly_payslips.each do |mp|
      - unless mp.payroll_category.blank?
        - unless mp.payroll_category.is_deduction == false
          %li{:class => "list#{cycle('odd', 'even')}"}
            .item-name= mp.payroll_category.name
            .item-edit
              %span.currency-type= @currency_type
              = "%.2f" %mp.amount.to_f
    - unless @individual_payslips.empty?
      - @individual_payslips.each do |pc|
        - if  pc.is_deduction == true
          %li{:class => "list#{cycle('odd', 'even')}"}
            .item-name= pc.name
            .item-edit
              %span.currency-type= @currency_type
              = "%.2f" % pc.amount
    %li{:class => "list#{cycle('odd', 'even')}"}
      .item-name
        %b= t('deductions')
      .item-edit
        %span.currency-type
          %b= @currency_type
        %b= "%.2f" %@salary[:net_deductionable_amount]
  %ul.item-list
    %li.heading1= t('total')
    %li.listeven
      .item-name
        %b= t('net_salary')
      .item-edit
        %span.currency-type
          %b= @currency_type
        %b
          = "%.2f" %@salary[:net_amount]
    - unless @monthly_payslips.first.is_approved == false and @monthly_payslips.first.is_rejected == false
      %li.listodd
        .item-name
          %b= t('remark')
        .item-edit
          %b
            %span.currency-type1= @monthly_payslips.first.remark
.pdf-report
  - if @is_present_employee==true and @monthly_payslips.first.is_approved == false and @monthly_payslips.first.is_rejected == false
    = link_to_remote "#{t('approve')}",:url=>{:controller => "finance", :action => "employee_payslip_accept_form", :id=> @monthly_payslips.first.employee_id, :id2=>params[:salary_date]}, :confirm=>"#{t('delete_confirm_msg')}"
    = link_to_remote "#{t('reject')}",:url=>{:controller => "finance", :action => "employee_payslip_reject_form", :id=> @monthly_payslips.first.employee_id, :id2=>params[:salary_date]}, :confirm=>"#{t('delete_confirm_msg')}"
  = link_to "#{t('pdf_report')}", :controller=>"employee", :action=>"employee_individual_payslip_pdf", :id=>params[:id], :id2=>params[:salary_date], :format=>'pdf', :target=>"_blank"
#modal-box{:style => "display:none"}
