- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
- unless @batch.nil?
  .add_sub
    = link_to_remote "#{t('add_normal_subject')}", :url => { :action => 'new', :id => @batch } unless defined? @elective_group
- unless @subjects.empty?
  %ul#category-list
    - unless params[:subject].nil?
      - if params[:subject][:elective_group_id]==""
        .add_sub
          = link_to_remote t('add_subject_to_elective_group'), :url => { :controller=>"subjects",:action => 'new', :id => @batch,:id2=> params[:subject][:elective_group_id]} if defined? @elective_group
    - @subjects.each do |subject|
      %li{:class => "list#{cycle('even','odd')}", :id => "subject-#{subject.id}"}
        .category-name= subject.name
        .opt
          .category-code= subject.code
          .category-edit
            = link_to_remote(t('edit_text'),                                                             |
              :url => { :controller=>"subjects",:action => 'edit', :id =>subject,:id2=>@elective_group}, |
              :method => 'get' )                                                                         |
          .category-delete
            - @subject_exams= Exam.find_by_subject_id(subject.id)
            - @subject_timetable = TimetableEntry.find_all_by_subject_id(subject.id)
            - if @subject_exams.blank? and @subject_timetable.blank?
              = link_to_remote(t('delete_text'),     |
                :url => subject_path(subject),       |
                :method => 'delete',                 |
                :confirm => t('delete_confirm_msg'), |
                :update => "subject-#{subject.id}")  |
            - else
              %s= t('delete_text')
          - unless subject.elective_group_id.nil?
            .category-assign
              = link_to "#{ t('assign_student')}", :controller=>"students", :action=>"electives",:id=>@batch,:id2=>subject.id
- unless @batch.nil?
  .add_sub
    = link_to "#{t('new_elective_group')}", new_batch_elective_group_path(@batch) unless defined? @elective_group
- unless @elective_groups.nil?
  - @elective_groups.each do |e|
    - @esubjects = @batch.elective_batch_subject(e.id)
    %h5= e.name
    .add_sub
      = link_to_remote t('add_subject_to_elective_group'), :url => { :controller=>"subjects",:action => 'new', :id => @batch,:id2=>e}
    %ul#category-list
      - @esubjects.each do |subject|
        %li{:class => "list#{cycle('even','odd')}", :id => "subject-#{subject.id}"}
          .category-name= subject.name
          .opt
            .category-code= subject.code
            .category-edit
              = link_to_remote( t('edit_text'),                                                            |
                :url => { :controller=>"subjects",:action => 'edit', :id =>subject,:id2=>@elective_group}, |
                :method => 'get' )                                                                         |
            .category-delete
              - @subject_exams= Exam.find_by_subject_id(subject.id)
              - @subject_timetable = TimetableEntry.find_by_subject_id(subject.id)
              - if @subject_exams.nil? and @subject_timetable.nil?
                = link_to_remote( t('delete_text'),     |
                  :url => subject_path(subject),        |
                  :method => 'delete',                  |
                  :confirm =>  t('delete_confirm_msg'), |
                  :update => "subject-#{subject.id}")   |
              - else
                %s= t('delete_text')
            - unless subject.elective_group_id.nil?
              .category-assign
                = link_to "#{ t('assign_student')}", :controller=>"students", :action=>"electives",:id=>@batch,:id2=>subject.id
