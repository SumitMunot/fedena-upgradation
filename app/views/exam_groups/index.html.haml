- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
= javascript_include_tag :application
= stylesheet_link_tag("exam_groups/index.css")
#content-header
  = image_tag("examination/show_exam.png")
  %h1= t('exams_text')
  %h3= t('exam_groups_text')
  #app-back-button
    = back_button
#inner-tab-menu
  %ul
    - if @current_user.admin? or @user_privileges.map{|p| p.name}.include?('ExaminationControl') or @user_privileges.map{|p| p.name}.include?('EnterResults')
      - if permitted_to? :new,:exam_groups
        %li= link_to "#{t('new_text')}", new_batch_exam_group_path(@batch)
    - if permitted_to? :grouping,:exam
      %li= link_to "#{t('connect_exams')}", :controller=>'exam', :action=>'grouping', :id=>@batch
#page-yield
  - unless flash[:notice].nil?
    %p.flash-msg
      = flash[:notice]
  .bread_crumb
    = link_to t('exams_text'), :controller => "exam", :action=>"index"
    »
    \#{link_to "#{t('exam_management')}", :controller => "exam", :action => "create_exam"} »
    \#{t('exam_groups_text')}
  .box
    %table#listing{:width => "100%"}
      %tr.tr-head
        %td= t('exam_name')
        - if @current_user.admin? or @user_privileges.map{|p| p.name}.include?('ExaminationControl') or @user_privileges.map{|p| p.name}.include?('EnterResults')
          %td
            = t('actions')
            = image_tag("loader.gif",     |
              :align => "absmiddle",      |
              :border => 0,               |
              :id => "loader",            |
              :style =>"display: none;" ) |
      - @config = Settings.available_modules
      - @exam_groups.each do |exam_group|
        %tr{:class => "tr-#{cycle('odd', 'even')}"}
          %td.col-2
            = link_to exam_group.name, [@batch, exam_group]
            - if @current_user.admin? or @user_privileges.map{|p| p.name}.include?('ExaminationControl') or @user_privileges.map{|p| p.name}.include?('EnterResults')
              %span
                %small
                  = link_to("#{t('delete_text')}", {:action=> :delete, :id => exam_group.id, :batch_id=> @batch.id}) if exam_group.removable?
                  %s= "#{t('delete_text')}" unless exam_group.removable?
          - if @current_user.admin? or @user_privileges.map{|p| p.name}.include?('ExaminationControl') or @user_privileges.map{|p| p.name}.include?('EnterResults')
            %td.col-2
              %small
                - unless exam_group.is_published
                  = link_to("#{t('publish_exam_schedule')}",{:controller=>'exam',:action=>'publish',:id=>exam_group.id,:status=>"schedule"}, :remote=> true)
                - else
                  - unless  exam_group.result_published
                    = t('schedule_published')
                    - if @sms_setting.application_sms_active and @sms_setting.exam_result_schedule_sms_active
                      = link_to "#{t('resend')}",{:controller=>'exam',:action=>'publish',:id=>exam_group.id,:status=>"schedule"}, :remote => true
                      = t('sms_notification')
                      \.
                      %br/
                    = link_to("#{t('publish_exam_result')}",{:controller=>'exam',:action=>'publish',:id=>exam_group.id,:status=>"result"}, :remote => true, :confirm=>"#{t('delete_confirm_msg')}")
                  - else
                    = t('result_published')
                    \.
                    - if @sms_setting.application_sms_active and @sms_setting.exam_result_schedule_sms_active
                      = link_to "#{t('resend_sms_notification')}",{:controller=>'exam',:action=>'publish',:id=>exam_group.id,:status=>"result"}, :remote => true
                %span{:id => "publish-notice-#{exam_group.id}"}
      - if @batch.cce_enabled?
        - if permitted_to? :observation_groups,  :assessment_scores
          %tr{:class => "tr-#{cycle('odd', 'even')}"}
            %td.col-1{:colspan => "2"}= link_to "Co-Scholastic result entry", observation_groups_assessment_scores_path(:batch_id=>@batch.id)
    .extender
