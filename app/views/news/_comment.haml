- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
- @comments.each do |cmnt|
  - if cmnt.valid? && @config && @config.config_value == '1'
    - is_author = (@current_user == cmnt.author)
    - if is_author || @is_moderator  || cmnt.is_approved
      %li{:id => "comment-item-#{cmnt.id}"}
        .comment-details
          .commenter= cmnt.author.present? ? cmnt.author.first_name : "#{t('user_deleted')}"
          - if is_author || @is_moderator
            .delete-comment
              = link_to t('delete_text'), { controller: :news, action: :delete_comment, id: cmnt }, confirm: t('delete_confirm_msg'), method: :DELETE, remote: true
          .comment-posted-at
            = t('posted')
            = cmnt.created_at.present? ? time_ago_in_words(cmnt.created_at) : ""
            = t('ago')
          .approve
            - if !@is_moderator and !cmnt.is_approved and is_author
              = "#{t('waiting_to_approve')}"
            - if @is_moderator and !cmnt.is_approved
              = "#{t('waiting_to_approve')}"
              = link_to t('approve'), {action: :comment_approved, id: cmnt.id}, remote: true
        .comment-content
          = sanitize   cmnt.content.strip.gsub("\n", "<br/>"), tags: %w[b i a ], attributes: %w[href]
  - else
    - is_author = (@current_user == cmnt.author)
    %li{:id => "comment-item-#{cmnt.id}"}
      .comment-details
        .commenter= cmnt.author.present? ? cmnt.author.first_name : "#{t('user_deleted')}"
        - if permitted_to? :delete_comment , :news
          - if is_author || @is_moderator
            .delete-comment= link_to  t('delete_text'), { controller: :news, action: :delete_comment, id: cmnt }, confirm: t('delete_confirm_msg'), method: :DELETE, remote: true
        .comment-posted-at
          = t('posted')
          = cmnt.created_at.present? ? time_ago_in_words(cmnt.created_at) : ""
          = t('ago')
      .comment-content
        = sanitize   cmnt.content.strip.gsub("\n", "<br/>"), tags: %w[b i a ], attributes: %w[href]
