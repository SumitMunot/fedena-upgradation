- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#page-yield
  .hor_line
  %h2= t('timetable_text')
  .hor_line
  .extender
  .report
    #main_info
      %h4
        = @batch.full_name
    #pdf-info
      %table#pdf-table{:cellspacing => "0", :width => "100%"}
        %tr.table-header
          %td.col-pdf= t('day')
          - @class_timing.each do |class_time|
            %td.col-pdf
              = class_time.name
        - @day.each do |d|
          - c =cycle('even','odd ')
          %tr{:class => "#{c}"}
            %td.col-pdf= t(Date::DAYNAMES[d.day_of_week].downcase).upcase
            - @class_timing.each do |pt1|
              - tte = TimetableEntry.find_by_weekday_id_and_class_timing_id_and_batch_id_and_timetable_id(d.id, pt1.id, @batch.id,@master.id)
              - unless tte.nil?
                - unless tte.subject.elective_group_id.nil?
                  - period = shorten_string(tte.subject.elective_group.name.to_s,10)
                - else
                  - period = tte.subject.nil?? " ":tte.subject.code
                - if Settings.available_modules.include?('HR')
                  - teacher = "\n("+tte.employee.employee_number+")"    unless tte.employee.nil?
                  %td.col-pdf
                    = period.upcase
                    %br/
                    - unless tte.subject.elective_group_id.present?
                      = teacher.to_s
                    - else
                      (#{t('elective').upcase})
                - else
                  %td.col-pdf= period
              - else
                %td.col-pdf
    .electives
      - @batch.elective_groups.each do |el|
        .group_names= el.name
        - el.subjects.active.each do |sub|
          .subject= sub.name
          .employee
            \: #{sub.employees.collect{|e| e.full_name}.join(',')}
