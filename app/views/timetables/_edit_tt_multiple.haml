- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
- c_id = @timetable[0].batch_id unless @timetable[0].nil?
- @day = Weekday.find_all_by_batch_id(c_id)
- if @day.empty?
  - @day = Weekday.default
- @subjects = Subject.find_all_by_batch_id(c_id, :conditions=>["elective_group_id IS NULL AND is_deleted = false"])
- @ele_subjects = Subject.find_all_by_batch_id(c_id, :conditions=>["elective_group_id IS NOT NULL AND is_deleted = false"], :group => "elective_group_id")
- @class_timing = ClassTiming.find_all_by_batch_id(c_id, :conditions => "is_break = false",:is_deleted=>false, :order =>'start_time ASC')
- if @class_timing.empty?
  - @class_timing = ClassTiming.default
#box
  %table#table{:align => "center", :border => "0", :cellspacing => "0", :width => "100%"}
    %tr
      %td.loader
        = image_tag("loader.gif",     |
          :align => "absmiddle",      |
          :border => 0,               |
          :id => "loader",            |
          :style =>"display: none;" ) |
        Â 
      %td.td-blank
      - @class_timing.each do |pt|
        %td.td
          .top
            = pt.start_time.strftime("%I:%M%p")  unless pt.start_time.nil?
            \- #{pt.end_time.strftime("%I:%M%p")  unless pt.end_time.nil?}
    / timetable_tr
    %tr.blank
      %td
      %td
      - @class_timing.each do |pt|
        %td
    - @day.each do |d|
      - x = d.weekday.to_i
      %tr
        %td.td
          .name= @weekday[x][0,3].upcase
        %td.td-blank
        - @class_timing.each do |pt1|
          %td.td
            - @tte = TimetableEntry.find_by_weekday_id_and_class_timing_id_and_batch_id(d.id, pt1.id, c_id)
            .drop{:id => "drop_#{@tte.id}", :onclick => "update_selected_divs('#{@tte.id}');"}
              .tt-subject{:id => "subject_name_#{@tte.id}"}
                .subject
                  = link_to_remote image_tag("  buttons/delete-new.png", :border => 0), |
                    :url => {:action => "delete_subject", :id => @tte.id},              |
                    :complete => "clear_selected_divs();",                              |
                    :before => "Element.show('loader')",                                |
                    :success => "Element.hide('loader')",                               |
                    :update => "timetable" \                                            |
                    unless @tte.subject.nil?                                            |
                  - unless @tte.subject.nil?
                    - unless @tte.subject.elective_group_id.nil?
                      = @tte.subject.elective_group.name
                    - else
                      = @tte.subject.code
            = drop_receiving_element("drop_#{@tte.id}",                                                                                                                               |
              :accept => "subjects",                                                                                                                                                  |
              :onDrop => "function(draggable_element, droppable_element) { $(droppable_element).highlight(); make_ajax_calls(#{@tte.id}, draggable_element.id.split('_').last()); }") |
- unless @validation_problems.nil?
  #errors
    - @validation_problems.each do |tte_id, errors|
      .error-explanation{:id => "error_div_#{tte_id}"}
        %b= t('warning')
        \:
        - errors["messages"].each do |err|
          = err
        \- On #{@weekday[TimetableEntry.find(tte_id).weekday_id.to_i]} (#{TimetableEntry.find(tte_id).class_timing.name})
        \#{link_to_remote "#{t('continue')}", :url=> {:action=> "tt_entry_update"}, :with   => "'&sub_id=#{errors["info"]["sub_id"]}' + '&tte_id=#{errors["info"]["tte_id"]}'", :before => "Element.show('loader')", :success => "Element.hide('loader')", :update=> "timetable"} |
        \#{link_to_remote "#{t('cancel')}", :url=>{:action=>"tt_entry_noupdate"}, :before => "Element.show('loader')", :success => "Element.hide('loader')", :with   => "'emp_id=#{errors["info"]["emp_id"]}' + '&sub_id=#{errors["info"]["sub_id"]}' + '&tte_id=#{errors["info"]["tte_id"]}'", :update=> "error_div_#{tte_id}"}
