- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
- scholastic = @report.scholastic
- cgpa=0.0
- count=0
- e = 'even'
#page-yield.available_sections
  .section
    .hor_line
    %h2 STUDENT REPORT
    .hor_line
    .extender
    .info
      .info-left
        .info1
          %label.field-label> Name
          \:
          %label.infolbl
            = @student.full_name
        .info1
          %label.field-label> Course
          \:
          %label.infolbl
            = @batch.course.full_name
      .info-right
        .info1
          %label.field-label> Adm No.
          \:
          %label.infolbl
            = @student.admission_no.present? ? @student.admission_no : "-"
        .info1
          %label.field-label> Batch
          \:
          %label.infolbl
            = @batch.name
  .section
    #score-table
      .custom_header
        %h3
          Scholastic Areas
      %table#pdf-table{:cellspacing => "0", :width => "100%"}
        - if @exam_groups.empty?
          %tr.tr-head
            %td No Exams
        - else
          %tr.table-header
            %td.sl_no{:rowspan => "2"} Sl no
            %td{:rowspan => "2"} Subjects
            - @exam_groups.each do |eg|
              %td{:colspan => "4"}= eg.cce_exam_category.name
            - if @exam_groups.count==2
              %td{:colspan => "4"} Overall
          %tr.table-header
            - @exam_groups.each_with_index do |eg,i|
              %td= "FA#{2*i+1}"
              %td= "FA#{2*i+2}"
              %td= "SA#{i+1}"
              %td= "FA#{2*i+1}+ FA#{2*i+2}+ SA#{i+1}"
            - if @exam_groups.count==2
              %td FA1+ FA2+ FA3+ FA4
              %td SA1+ SA2
              %td Overall
              %td Grade Point
          - @subjects.each_with_index do |s,i|
            %tr{:class => "#{cycle(e,(["odd","even"]-[e]).first)}"}
              %td.sl_no= i+1
              %td.subject= s.name
              - sub=scholastic.find{|c| c.subject_id==s.id}
              - @exam_groups.each do |eg|
              - se=sub.exams.find{|g| g.exam_group_id==eg.id} if sub
                - if se
                  %td= se.fa[se.fa_group_ids[0]] if se.fa_group_ids[0]
                  %td= se.fa[se.fa_group_ids[1]] if se.fa_group_ids[1]
                  %td= se.sa
                  %td= se.overall
                - else
                  %td -
                  %td -
                  %td -
                  %td -
              - if @exam_groups.count==2
                - if sub
                  %td= sub.fa
                  %td= sub.sa
                  %td= sub.overall
                  %td= sub.grade_point
                  - if s.elective_group_id.blank?
                    - cgpa += sub.grade_point.to_f
                    - count += 1
                - else
                  %td -
                  %td -
                  %td -
                  %td -
          - if @exam_groups.count==2
            %tr.table-footer
              %td{:colspan => "#{6+@exam_groups.count*4}"}
                Cumulative Grade Point Average(CGPA)  :   #{cgpa/count unless count==0}
  - @co_hashi.keys.sort.each do |kind|
    .section
      .custom_header
        %h3= ObservationGroup::OBSERVATION_KINDS[kind]
      - @co_hashi[kind].each do |ob_grp|
        #score-table
          %table#pdf-table{:cellspacing => "0", :width => "100%"}
            %tr.table-header
              %td{:colspan => "2"}= @obs_groups.find{|o| o.id == ob_grp.observation_group_id}.try(:name)
            %tr.table-header
              %td Descriptive Indicators
              %td.grade Grade
            - ob_grp.observations.sort_by(&:sort_order).each do |o|
              %tr{:class => "#{cycle(e,(["odd","even"]-[e]).first)}"}
                %td.subject= o.observation_name
                %td.grade= o.grade
