- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
- #page breaking implemented page
- #'available_sections' marks beginning of a pdf page, all the contents within a 'section' class beneath -
- #the 'available_section' will be taken to another div with a class 'page' dynamically by the javascript -
- #written in layouts/pdf.html.erb. 'page' has style for page-break-after:auto property which makes sure -
- #content within class 'section' breaks on each page if its the last content and no space left in current page
- #warning: the 'page' div is created directly below html , so style your pdf keeping that in mind.
- #point to note: make an easy guess the length of content a page can hold, and make sure each 'section' will -
- #not exceed the a page size, like we did below for student_additional_fields, we force a new table to be drawn -
- #each time the row count reaches 28, as 28 being the max number of rows an A4 can hold.
- #avoid creating deeper nests, make 'section' simpler.
#page-yield.available_sections
  .hor_line
  #student_profile_heading.section
    #student_main_info
      %h2
        = @student.full_name
      %h4= t('student_profile')
  %table#pdf-table.section{:cellspacing => "0", :width => "100%"}
    %tr.odd
      %td.col-pdf= t('admission_number')
      %td.col-pdf= @student.admission_no unless @student.admission_no.nil?
    %tr.even
      %td.col-pdf= t('admission_date')
      %td.col-pdf= I18n.l(@student.admission_date,:format=>:normal) unless @student.admission_date.nil?
    %tr.odd
      %td.col-pdf= t('batch')
      %td.col-pdf= @student.batch.name unless @student.batch.name.nil?
    %tr.even
      %td.col-pdf= t('course_text')
      %td.col-pdf= @student.batch.course.full_name unless @student.batch.course.full_name.nil?
    %tr.odd
      %td= t('date_of_birth')
      %td.right= I18n.l(@student.date_of_birth,:format=>:normal) unless @student.date_of_birth.nil?
    %tr.even
      %td= t('blood_group')
      %td.right= @student.blood_group
    %tr.odd
      %td= t('gender')
      %td.right= t("#{@student.gender_as_text.downcase}")
    %tr.even
      %td= t('nationality')
      %td.right= @student.nationality.name unless @student.nationality_id.nil?
    %tr.odd
      %td= t('language')
      %td.right= @student.language
    %tr.even
      %td= t('category')
      %td.right= @student.student_category.name unless @student.student_category.nil?
    %tr.odd
      %td= t('religion')
      %td.right= @student.religion
    %tr.even
      %td= t('address')
      %td.right
        = @student.address_line1
        = ', ' unless @student.address_line1.blank?
        = @student.address_line2
    %tr.odd
      %td= t('city')
      %td.right= @student.city
    %tr.even
      %td= t('state')
      %td.right= @student.state
    %tr.odd
      %td= t('zip')
      %td.right= @student.pin_code
    %tr.even
      %td= t('country')
      %td.right= @student.country.name unless @student.country_id.nil?
    %tr.odd
      %td= t('phone')
      %td.right= @student.phone1
    %tr.even
      %td= t('mobile')
      %td.right= @student.phone2
    %tr.odd
      %td= t('email')
      %td.right= @student.email
    %tr.even
      %td= t('group_tutor')
      %td.right
        - unless @student.batch.employee_id.nil?
          - @assigned_employees = Employee.find(:all,:conditions=>"FIND_IN_SET(id,\"#{@student.batch.employee_id}\")")
          - @assigned_employees.each do |e|
            = e.full_name
            %br/
    %tr.even
      %td= t('immediate_contact')
      %td.right
        = @immediate_contact.full_name unless @immediate_contact.nil?
        = "(" + @immediate_contact.mobile_phone + ")" if @immediate_contact and !@immediate_contact.mobile_phone.empty?
    - c = 'odd'
  %table#pdf-table.section{:cellspacing => "0", :width => "100%"}
    - unless  @additional_fields.empty?
      - @additional_fields.each_with_index do |field,i|
        - if (i+1)%28 == 0
  %table#pdf-table.section{:cellspacing => "0", :width => "100%"}
    %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
      %td.col-pdf= field.name
      %td.col-pdf
        - detail = StudentAdditionalDetail.find_by_additional_field_id_and_student_id(field.id,@student.id)
        = detail.additional_info unless detail.nil?
    %tr{:class => "#{cycle(c,(["odd","even"]-[c]).first)}"}
      %td.col-pdf= t('previous_institution')
      %td.col-pdf= @previous_data.institution unless @previous_data.nil?
