- # Fedena
- #Copyright 2010 Foradian Technologies Private Limited
- #
- #This product includes software developed at
- #Project Fedena - http://www.projectfedena.org/
- #
- #Licensed under the Apache License, Version 2.0 (the "License");
- #you may not use this file except in compliance with the License.
- #You may obtain a copy of the License at
- #
- #  http://www.apache.org/licenses/LICENSE-2.0
- #
- #Unless required by applicable law or agreed to in writing,
- #software distributed under the License is distributed on an
- #"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
- #KIND, either express or implied.  See the License for the
- #specific language governing permissions and limitations
- #under the License.
#content-header
  %img{:src => "student_details/student_details_logo.jpg"}/
  %h1= t('student_info')
  %h3= t('student_profile')
  #app-back-button
    = back_button
#nav
  %ul
    - if permitted_to? :reports,:student
      %li= link_to t('reports_text'), reports_student_path(@student)
    - if permitted_to? :guardians,:student
      %li= link_to t('guardians_text'), guardians_student_path(@student.id)
    - if permitted_to? :email,:student
      - @config = Settings.find_by_config_key('NetworkState').config_value
      - if @config == 'Online'
        %li= link_to "#{t('send_email')}", :controller => "students",:action => "email", :id => @student.id
    - if permitted_to? :remove, :student or permitted_to? :admission1, :student
      %li= link_to "#{t('delete_text')}", :controller => 'students', :action => 'remove', :id => @student.id
    %li
      %a#link_one.drops{:href => "#"}
        = t('more')
        ▼
      %ul#box_one.scriptaculously{:style => "display:none;"}
        - if @sms_module.include?('Finance') and permitted_to? :fees, :student
          %li= link_to t('fees_text'), fees_student_path(@student)
        - FedenaPlugin::ADDITIONAL_LINKS[:student_profile_more_menu].each do |mod|
          - if permitted_to? "#{mod[:destination][:action]}".to_sym,"#{mod[:destination][:controller]}".to_sym
            %li= link_to t(mod[:title]), mod[:destination].merge(:id=>@student.id)
#page-yield
  - unless flash[:notice].nil?
    %p.flash-msg
      = flash[:notice]
  #student_profile_heading
    #profile_picture_display
      - if @student.photo.file?
        = image_tag @student.photo.url
      - else
        = image_tag "master_student/profile/default_student.png"
    #student_main_info
      %h3
        = @student.full_name
      %h4
        = t('course_text')
        \: #{@student.batch.course.full_name}
      %h4
        = t('batch')
        \: #{@student.batch.name}
      %h4
        = t('adm_no')
        \: #{@student.admission_no}
    .extender
  #new_profile_info_top
    .profile_top_banner
      %span.profile= t('details')
      .profile-topbanner
    %table{:width => "700"}
      %tr.odd.left
        %td= t('admission_date')
        %td.right= I18n.l(@student.admission_date,:format=>:normal) unless @student.admission_date.nil?
      %tr.even.left
        %td= t('date_of_birth')
        %td.right= I18n.l(@student.date_of_birth,:format=>:normal) unless @student.date_of_birth.nil?
      %tr.odd.left
        %td= t('blood_group')
        %td.right= @student.blood_group
      %tr.even.left
        %td= t('gender')
        %td.right= t("#{@student.gender_as_text.downcase}")
      %tr.odd.left
        %td= t('nationality')
        %td.right= @student.nationality.name unless @student.nationality_id.nil?
      %tr.even.left
        %td= t('language')
        %td.right= @student.language
      %tr.odd.left
        %td= t('category')
        %td.right= @student.student_category.name unless @student.student_category.nil?
      %tr.even.left
        %td= t('religion')
        %td.right= @student.religion
      %tr.odd.left
        %td= t('address')
        %td.right
          = @student.address_line1
          = ', ' unless @student.address_line1.blank?
          = @student.address_line2
      %tr.even.left
        %td= t('city')
        %td.right= @student.city
      %tr.odd.left
        %td= t('state')
        %td.right= @student.state
      %tr.even.left
        %td= t('zip')
        %td.right= @student.pin_code
      %tr.odd.left
        %td= t('country')
        %td.right= @student.country.name unless @student.country_id.nil?
      %tr.even.left
        %td= t('phone')
        %td.right= @student.phone1
      %tr.odd.left
        %td= t('mobile')
        %td.right= @student.phone2
      %tr.even.left
        %td= t('email')
        %td.right= @student.email
      - unless @student.batch.employee_id.nil?
        - @assigned_employees = Employee.find(:all,:conditions=>"FIND_IN_SET(id,\"#{@student.batch.employee_id}\")")
        %tr.even.left
          %td
            = t('group_tutor')
            (s) :
          %td.right
            - @tutors = @assigned_employees.map{|e| e.full_name}
            - @tutor_ids = @assigned_employees.map{|e| e.user.id}
            = link_to @tutors.join(", "),:controller=>'reminder',:action=>'create_reminder',:send_to=>@tutor_ids.join(",")
      - FedenaPlugin::REGISTERED_HOOKS[:student_profile].each do |mod|
        = render :partial=>mod.camelize.constantize.send("student_profile_hook"),:locals=>{:student=>@student}
      - if @sms_setting.application_sms_active
        %tr.odd.left
          %td= t('sms_alerts')
          %td.right= @student.is_sms_enabled?? "Enabled":"Disabled"
      %tr.even.left
        %td= t('contact_message')
        %td.right
          - unless @immediate_contact.nil?
            = link_to @immediate_contact.full_name, :controller => "students", :action => "guardians", :id => @student.id
          = "(" + @immediate_contact.mobile_phone + ")" if @immediate_contact and !@immediate_contact.mobile_phone.empty?
          - if @current_user.admin?
            - unless @immediate_contact.nil?
              %span
                (#{link_to "#{t('change_contact')}", :controller => 'students', :action => 'admission3_1', :id => @student.id})
            - else
              - if permitted_to? :add_guardian,:student
                %span
                  = t('no_guardian')
                  (#{link_to "#{t('add_guardian')}",:controller => 'students',:action => 'add_guardian', :id => @student.id} / #{link_to "#{t('choose_from_existing')}",:controller => 'students',:action => 'admission3_1', :id => @student.id})
              - else
                %span= t('no_guardian')
      - unless  @additional_fields.empty?
        - @additional_fields.each do |field|
          - p =cycle('2',' ')
          %tr.odd.left
            %td= field.name
            %td.right
              - detail = StudentAdditionalDetail.find_by_additional_field_id_and_student_id(field.id,@student.id)
              = detail.additional_info unless detail.nil?
          %tr.odd.left
            %td
            %td.right
              - detail = StudentAdditionalDetail.where(:student_id => @student.id)
              - if permitted_to? :edit_admission4,:student
                - unless detail.blank?
                  %span
                    (#{link_to "#{t('edit_additional_details')}", :controller => 'students', :action => 'admission4', :id => @student.id})
                - else
                  %span
                    (#{link_to "#{t('add_additional_details')}", :controller => 'students', :action => 'admission4', :id => @student.id})
        - unless @previous_data.nil?
          %tr.even.left
            %td
            %td.right= t('previous_details')
          %tr.odd.left
            %td= t('previous_institution')
            %td.right= link_to @previous_data.institution,:action=>'show_previous_details', :id => @student.id
        - else
          - if permitted_to? :previous_data,:student
            %tr.odd.left
              %td
              %td.right
                = t('no_previous_data')
                (#{link_to "#{t('add_previous_data')}", :controller => 'students', :action => 'previous_data', :id => @student.id})
          - else
            %tr.odd.left
              %td
              %td.right= t('no_previous_data')
    - if @current_user.admin?
      .buttons
        = link_to " ► #{t('edit_text')}", { :controller => "students", :action => "edit", :id => @student.id },:class => "user_button"
        = link_to " ► #{t('pdf_report')}", {:controller => "students", :action => "profile_pdf", :id => @student.id},:target => '_blank', :class=> 'user_button'
    - elsif permitted_to? :edit, :student
      .buttons
        = link_to " ► #{t('edit_text')}", { :controller => "students", :action => "edit", :id => @student.id },:class => "user_button"
        = link_to " ► #{t('pdf_report')}", {:controller => "students", :action => "profile_pdf", :id => @student.id},:target => '_blank', :class=> 'user_button'